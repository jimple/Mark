
--------------------------------------------------------------------------
 - text不仅可直接依据RACObserve观察的值变化，而且可将RACObserve的值进行判断后重新输出。
  UITextField的rac_textSignal一样可用。
  combineLatest中可以放多个信号，响应多个信号变化（但是需要多个信号都至少有一个值时reduce才会执行）。
    RAC(self.statusLabel, text) = [RACSignal
                                combineLatest:@[ RACObserve(self.viewModel, statusMessage) ]
                                reduce:^(NSString *text) {
                                    return ([text hasPrefix:@"T"] ? [NSString stringWithFormat:@"1-%@", text] : text);
                                }];

--------------------------------------------------------------------------
 - 对观察的值做过滤
 [[RACObserve(self, username)
    filter:^(NSString *newName) {
        return [newName hasPrefix:@"j"];
    }]
    subscribeNext:^(NSString *newName) {
        NSLog(@"%@", newName);
    }];

--------------------------------------------------------------------------
// fetchUserRepos与fetchOrgRepos是两个异步操作，merge会在两个操作都完成的情况下返回一个新的信号。
[[RACSignal 
    merge:@[ [client fetchUserRepos], [client fetchOrgRepos] ]] 
    subscribeCompleted:^{
        NSLog(@"They're both done!");
    }];
    
    
    
--------------------------------------------------------------------------
- switchToLatest方法用于含有多个信号的信号(signal-of-signals)，它总是输出(forwards)最新的信号的值。
RACSubject *letters = [RACSubject subject];
RACSubject *numbers = [RACSubject subject];
RACSubject *signalOfSignals = [RACSubject subject];

RACSignal *switched = [signalOfSignals switchToLatest];

// Outputs: A B 1 D
[switched subscribeNext:^(NSString *x) {
    NSLog(@"%@", x);
}];

[signalOfSignals sendNext:letters];
[letters sendNext:@"A"];
[letters sendNext:@"B"];

[signalOfSignals sendNext:numbers];
[letters sendNext:@"C"];
[numbers sendNext:@"1"];

[signalOfSignals sendNext:letters];
[numbers sendNext:@"2"];
[letters sendNext:@"D"];

--------------------------------------------------------------------------
- 使用distinctUntilChanged后相同的值会被忽略
[RACObserve(self.user, username) distinctUntilChanged];


